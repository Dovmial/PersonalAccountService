@using DataLib.Entities
@using DataLib.Filters
@model IEnumerable<PersonalAccount>
@{
    ViewData["Title"] = "Home Page";
    FilterPersonalAccount Filter = ViewBag.Filter;

    var sortFields = (ViewBag.Sort as string)?.Split(',') ?? Array.Empty<string>();
    var sortDirs = (ViewBag.Direct as string)?.Split(',') ?? Array.Empty<string>();

    Func<string, string> GetNextSortDir = (field) =>
    {
        int index = Array.IndexOf(sortFields, field);
        if (index == -1)
            return "asc"; // по умолчанию
        return sortDirs.Length > index && sortDirs[index] == "asc" ? "desc" : "asc";
    };

    Func<string, string> BuildNewSortQuery = (clickedField) =>
    {
        var newSort = new List<string>();
        var newDirs = new List<string>();

        for (int i = 0; i < sortFields.Length; ++i)
        {
            if (sortFields[i] != clickedField)
            {
                newSort.Add(sortFields[i]);
                newDirs.Add(sortDirs.Length > i ? sortDirs[i] : "asc");
            }
        }

        newSort.Insert(0, clickedField);
        newDirs.Insert(0, GetNextSortDir(clickedField));

        return $"sort={string.Join(",", newSort)}&dir={string.Join(",", newDirs)}";
    };
}

<h1 class=" text-center text-info">Лицевые счета</h1>
<div class="card mb-4">
    <div class="card-header">
        <h5>Фильтры</h5>
    </div>
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label asp-for="@Filter.NumberOfPersonalAccount" class="form-label">Номер счета</label>
                <input asp-for="@Filter.NumberOfPersonalAccount" class="form-control" />
            </div>
            <div class="col-md-3">
                <label asp-for="@Filter.Address" class="form-label">Адрес</label>
                <input asp-for="@Filter.Address" class="form-control" />
            </div>
            <div class="col-md-3">
                <label asp-for="@Filter.Fullname" class="form-label">ФИО</label>
                <input asp-for="@Filter.Fullname" class="form-control" />
            </div>
            <div class="col-md-3">
                <label asp-for="@Filter.ActiveForDate" class="form-label">Дата активации</label>
                <input asp-for="@Filter.ActiveForDate" type="date" class="form-control" />
            </div>
            <div class="col-md-3">
                <div class="form-check mt-4">
                    <label asp-for="@Filter.IsAnyResidents" class="form-check-label">Жильцы</label>
                    <select asp-for="@Filter.IsAnyResidents" class="form-select">
                        <option value="">Не выбрано</option>
                        <option value="true">Есть жильцы</option>
                        <option value="false">Нет жильцов</option>
                    </select>
                </div>
            </div>
            <div class="col-12 mt-3">
                <button type="submit" class="btn btn-primary">Применить</button>
                <a asp-action="Index" class="btn btn-secondary">Сбросить</a>
            </div>
        </form>
    </div>
</div>

<div class="text-right">
    <a asp-action="Create" class="btn btn-primary mx-1 my-1">Добавить</a>
</div>
<table class="table-bordered mx-auto">
    <thead>
        <tr class="align-middle text-center">
            <th>
                <a asp-action="Index"
                   asp-all-route-data="@Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString())"
                   asp-route-sort="@BuildNewSortQuery("number").Split('&')[0].Split('=')[1]"
                   asp-route-direct="@BuildNewSortQuery("number").Split('&')[1].Split('=')[1]">
                    @Html.DisplayNameFor(m => m.Number)
                </a>
            </th>
            <th>
                 <a asp-action="Index"
                   asp-all-route-data="@Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString())"
                   asp-route-sort="@BuildNewSortQuery("address").Split('&')[0].Split('=')[1]"
                   asp-route-direct="@BuildNewSortQuery("address").Split('&')[1].Split('=')[1]">
                    @Html.DisplayNameFor(m => m.Address)
                </a>
            </th>
            <th>
                 <a asp-action="Index"
                   asp-all-route-data="@Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString())"
                   asp-route-sort="@BuildNewSortQuery("area").Split('&')[0].Split('=')[1]"
                   asp-route-direct="@BuildNewSortQuery("area").Split('&')[1].Split('=')[1]">
                    @Html.DisplayNameFor(m => m.Area)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-all-route-data="@Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString())"
                   asp-route-sort="@BuildNewSortQuery("dateactivate").Split('&')[0].Split('=')[1]"
                   asp-route-direct="@BuildNewSortQuery("dateactivate").Split('&')[1].Split('=')[1]">
                    @Html.DisplayNameFor(m => m.DateActivate)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-all-route-data="@Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString())"
                   asp-route-sort="@BuildNewSortQuery("datefinish").Split('&')[0].Split('=')[1]"
                   asp-route-direct="@BuildNewSortQuery("datefinish").Split('&')[1].Split('=')[1]">
                    @Html.DisplayNameFor(m => m.DateFinish)
                </a>
            </th>
            <th>@Html.DisplayNameFor(m => m.ResidentsCount)</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model)
        {
            <tr class="align-middle text-center">
                <td width="10%">@Html.DisplayFor(x => item.Number)</td>
                <td width="30%">@Html.DisplayFor(x => item.Address)</td>
                <td width="10%">@Html.DisplayFor(x => item.Area)</td>
                <td width="10%">@Html.DisplayFor(x => item.DateActivate)</td>
                <td width="10%">@Html.DisplayFor(x => item.DateFinish)</td>
                <td width="10%">@Html.DisplayFor(x => item.ResidentsCount)</td>
                <td width="20%" class="table-borderless ">
                    <table class="mx-auto">
                        <tbody>
                            <tr>
                                <td width="50%">
                                    <a asp-controller="Resident" asp-action="Index" class="btn btn-success w-100" asp-route-accountId="@item.Id">Жильцы</a>
                                </td>
                                <td width="50%">
                                    <a class="btn btn-info w-100" asp-action="Details" asp-route-id="@item.Id">Инфо</a>
                                </td>
                            </tr>
                            <tr>
                                <td width="50%">
                                    <a class="btn btn-warning w-100" asp-action="Update" asp-route-id="@item.Id">Изменить</a>
                                </td>
                                <td width="50%">
                                    <a class="btn btn-danger w-100" asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
        }
    </tbody>
</table>
